<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - LoraAir</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        /* Ho definito variabili CSS personalizzate per il tema */
        :root {
            --primary-color: #4CAF50;
            --secondary-color: #2196F3;
            --accent-color: #FF9800;
            --background-color: #f4f7fa;
            --card-bg: #ffffff;
        }
        
        body {
            background-color: var(--background-color);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .navbar {
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
            background: #000000;
        }
        
        .navbar-brand {
            font-weight: 600;
            color: white !important;
        }
        
        /* Indicatore di progresso dello scroll */
        .scroll-progress-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            z-index: 1000;
        }
        
        .scroll-progress-bar {
            height: 100%;
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            width: 0;
            transition: width 0.2s ease;
        }
        
        /* Welcome banner */
        .welcome-banner {
            position: relative;
            overflow: hidden;
            border-radius: 15px;
        }
        
        .welcome-banner .wave {
            position: absolute;
            opacity: 0.3;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 60px;
            background-image: url('data:image/svg+xml;utf8,<svg viewBox="0 0 1440 320" xmlns="http://www.w3.org/2000/svg"><path fill="white" d="M0,192L40,170.7C80,149,160,107,240,90.7C320,75,400,85,480,112C560,139,640,181,720,176C800,171,880,117,960,101.3C1040,85,1120,107,1200,128C1280,149,1360,171,1400,181.3L1440,192L1440,320L1400,320C1360,320,1280,320,1200,320C1120,320,1040,320,960,320C880,320,800,320,720,320C640,320,560,320,480,320C400,320,320,320,240,320C160,320,80,320,40,320L0,320Z"></path></svg>');
            background-repeat: repeat-x;
            animation: wave 15s linear infinite;
        }
        
        @keyframes wave {
            0% { background-position-x: 0; }
            100% { background-position-x: 1440px; }
        }
        
        /* Animazioni */
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }
        
        @keyframes float {
            0% { transform: translateY(0) rotate(0deg); }
            50% { transform: translateY(-15px) rotate(5deg); }
            100% { transform: translateY(0) rotate(0deg); }
        }
        
        @keyframes fadeIn {
            0% { opacity: 0; }
            100% { opacity: 1; }
        }
        
        /* Stazione card */
        .station-card {
            border-radius: 15px;
            border: none;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            overflow: hidden;
            height: 100%;
            position: relative;
        }
        
        .station-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        
        .station-card .card-body {
            z-index: 2;
            position: relative;
            padding: 1.75rem;
        }
        
        .station-card .card-img-overlay {
            background: linear-gradient(to bottom, rgba(0,0,0,0.4) 0%, rgba(0,0,0,0.2) 50%, rgba(0,0,0,0.1) 100%);
        }
        
        .station-card h3 {
            color: white;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }
        
        .station-card p {
            color: rgba(255, 255, 255, 0.9);
            font-size: 0.95rem;
        }
        
        .station-card .badge {
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 0.8rem;
            padding: 0.5em 0.8em;
        }
        
        .station-card .stats {
            display: flex;
            justify-content: space-between;
            margin-top: 1rem;
        }
        
        .station-card .stat {
            text-align: center;
            flex: 1;
            background-color: rgba(255, 255, 255, 0.15);
            padding: 5px;
            border-radius: 8px;
            margin: 0 3px;
            backdrop-filter: blur(5px);
        }
        
        .station-card .stat-value {
            font-weight: 700;
            color: white;
            font-size: 1.1rem;
            margin-bottom: 0;
        }
        
        .station-card .stat-label {
            color: rgba(255, 255, 255, 0.8);
            font-size: 0.75rem;
            margin: 0;
        }
        
        .station-card .btn {
            margin-top: 1.5rem;
            backdrop-filter: blur(5px);
        }
        
        .stat-icon {
            font-size: 0.85rem;
            margin-right: 3px;
            color: rgba(255, 255, 255, 0.9);
        }
        
        /* Pulsante aggiungi */
        .add-station-card {
            border: 2px dashed rgba(0, 0, 0, 0.1);
            border-radius: 15px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100%;
            min-height: 300px;
            transition: all 0.3s ease;
            background-color: rgba(255, 255, 255, 0.5);
        }
        
        .add-station-card:hover {
            border-color: var(--primary-color);
            background-color: rgba(255, 255, 255, 0.8);
        }
        
        .add-station-icon {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background-color: var(--primary-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.75rem;
            margin-bottom: 1rem;
            transition: transform 0.3s ease;
        }
        
        .add-station-card:hover .add-station-icon {
            transform: scale(1.1);
        }
        
        .add-station-text {
            color: #555;
            font-weight: 500;
            text-align: center;
        }
        
        /* Gradiente per le card */
        .gradient-1 {
            background: linear-gradient(45deg, #43a047, #2196f3);
        }
        
        .gradient-2 {
            background: linear-gradient(45deg, #f44336, #ff9800);
        }
        
        .gradient-3 {
            background: linear-gradient(45deg, #9c27b0, #e91e63);
        }
        
        .gradient-4 {
            background: linear-gradient(45deg, #009688, #4caf50);
        }
        
        /* Effetto bordo animato */
        .border-glow {
            position: relative;
            overflow: hidden;
            border-radius: 15px;
        }
        
        .border-glow::after {
            content: '';
            position: absolute;
            top: -2px;
            left: -2px;
            right: -2px;
            bottom: -2px;
            background: linear-gradient(45deg, var(--primary-color), var(--secondary-color), var(--accent-color));
            z-index: -1;
            border-radius: 17px;
            animation: border-animate 3s linear infinite;
        }
        
        @keyframes border-animate {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <%- include('./partials/nav.ejs', {isLoggedIn: true, user: user}) %>
    
    <!-- Indicatore di progresso dello scroll -->
    <div class="scroll-progress-container">
        <div class="scroll-progress-bar" id="scrollProgressBar"></div>
    </div>

    <div class="container-fluid py-4">
        <!-- Banner di benvenuto con effetto gradiente e animazione -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="welcome-banner p-4 pt-4 pb-5 rounded shadow-lg mb-4" style="background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%); color: white; position: relative; overflow: hidden; min-height: 150px;">
                    <div class="wave"></div>
                    <h2 class="fw-bold">Benvenuto, <%= user.name %></h2>
                    <p class="lead mb-0">Ecco le tue centraline LoraAir. Selezionane una per vedere i dati in tempo reale.</p>
                </div>
            </div>
        </div>

        <!-- Elenco centraline -->
        <div class="row g-4">
            <!-- Per ogni centralina dell'utente -->
            <% if (stations && stations.length > 0) { %>
                <% stations.forEach((station, index) => { 
                    const gradientClass = `gradient-${(index % 4) + 1}`;
                %>
                    <div class="col-md-6 col-lg-4 mb-4">
                        <div class="card station-card <%= gradientClass %>">
                            <div class="card-body">
                                <span class="badge bg-light text-dark">ID: <%= station.id %></span>
                                <h3><%= station.name %></h3>
                                <p><i class="fas fa-map-marker-alt me-2"></i><%= station.location || 'Posizione non specificata' %></p>
                                
                                <div class="stats">
                                    <div class="stat">
                                        <p class="stat-value"><%= station.lastReading?.temperature ? station.lastReading.temperature.toFixed(1) : '--' %> °C</p>
                                        <p class="stat-label"><i class="fas fa-temperature-high stat-icon"></i>Temp</p>
                                    </div>
                                    <div class="stat">
                                        <p class="stat-value"><%= station.lastReading?.humidity ? station.lastReading.humidity.toFixed(1) : '--' %> %</p>
                                        <p class="stat-label"><i class="fas fa-tint stat-icon"></i>Umid</p>
                                    </div>
                                    <div class="stat">
                                        <p class="stat-value"><%= station.lastReading?.airQuality ? station.lastReading.airQuality.toFixed(1) : '--' %></p>
                                        <p class="stat-label"><i class="fas fa-wind stat-icon"></i>Qualità aria</p>
                                    </div>
                                </div>
                                
                                <!-- Pulsanti azione -->
                                <div class="d-flex gap-2 mt-3">
                                    <!-- Link alla route dinamica EJS -->
                                    <a href="/station/<%= station.id %>" class="btn btn-light flex-grow-1">
                                        <i class="fas fa-chart-line me-2"></i>Dettagli
                                    </a>
                                    <!-- Pulsante elimina con conferma -->
                                    <button class="btn btn-outline-danger delete-station" data-id="<%= station.id %>" data-name="<%= station.name %>">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <!-- Messaggio se non ci sono centraline -->
                <div class="col-12 text-center py-5">
                    <h3 class="text-muted mb-4">Nessuna centralina disponibile</h3>
                    <p>Non hai ancora configurato nessuna centralina LoraAir.</p>
                    <a href="/stations/new" class="btn btn-primary mt-3">
                        <i class="fas fa-plus me-2"></i>Aggiungi la tua prima centralina
                    </a>
                </div>
            <% } %>
            
            <!-- Card per aggiungere una nuova centralina -->
            <% if (stations && stations.length > 0) { %>
                <% 
                // Calcola il limite di dispositivi in base al piano
                let maxDevices = 3; // Default per piano 'base'
                if (user && user.subscription) {
                    const plan = user.subscription.toLowerCase();
                    if (plan === 'standard') maxDevices = 6;
                    else if (plan === 'premium') maxDevices = 10;
                }
                
                // Verifica se l'utente ha raggiunto il limite
                const hasReachedLimit = stations.length >= maxDevices;
                %>
                
                <% if (!hasReachedLimit) { %>
                <!-- Mostra la card solo se l'utente non ha raggiunto il limite -->
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="add-station-card">
                        <div class="add-station-icon">
                            <i class="fas fa-plus"></i>
                        </div>
                        <h4 class="add-station-text">Aggiungi nuova centralina</h4>
                        <p class="text-muted">Configura un nuovo dispositivo LoraAir</p>
                        <a href="/stations/new" class="btn btn-outline-primary mt-2">Inizia configurazione</a>
                    </div>
                </div>
                <% } else { %>
                <!-- Mostra un messaggio se l'utente ha raggiunto il limite -->
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="add-station-card bg-light border-0" style="border: 2px dashed #dee2e6 !important; opacity: 0.8;">
                        <div class="add-station-icon text-warning">
                            <i class="fas fa-exclamation-circle"></i>
                        </div>
                        <h4 class="add-station-text text-muted">Limite raggiunto</h4>
                        <p class="text-muted">Hai raggiunto il limite di <%= maxDevices %> centraline per il tuo piano <%= user.subscription %>.</p>
                        <a href="/subscription" class="btn btn-warning mt-2">
                            <i class="fas fa-arrow-up me-2"></i>Aggiorna piano
                        </a>
                    </div>
                </div>
                <% } %>
            <% } %>
        </div>

        <!-- Statistiche generali -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card border-glow">
                    <div class="card-body text-center">
                        <h5 class="card-title"><i class="fas fa-info-circle me-2"></i>Statistiche generali</h5>
                        <div class="row mt-3">
                            <div class="col-md-3">
                                <h3 style="color: var(--primary-color);"><%= stations ? stations.length : 0 %></h3>
                                <p class="text-muted">Centraline totali</p>
                            </div>
                            <div class="col-md-3">
                                <h3 style="color: var(--secondary-color);" id="clockDisplay"></h3>
                                <p class="text-muted">Ora locale</p>
                            </div>
                            <div class="col-md-3">
                                <h3 style="color: var(--accent-color);"><%= user.subscription %></h3>
                                <p class="text-muted">Piano attivo</p>
                            </div>
                            <div class="col-md-3">
                                <h3 style="color: var(--primary-color);"><%= lastLogin ? new Date(lastLogin).toLocaleDateString('it-IT') : '-' %></h3>
                                <p class="text-muted">Ultimo accesso</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Ho incluso il banner dei cookie per il consenso GDPR -->
    <%- include('./partials/cookie-banner.ejs') %>
    <!-- SweetAlert2 per alert grafici moderni -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- Animate.css per animazioni fluide e veloci -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>
    <script>
        // Funzione per aggiornare l'orologio in tempo reale
        function updateClock() {
            const now = new Date();
            const clockDisplay = document.getElementById('clockDisplay');
            if (clockDisplay) {
                clockDisplay.textContent = now.toLocaleTimeString('it-IT');
            }
        }
        
        // Aggiorna l'orologio ogni secondo
        updateClock();
        setInterval(updateClock, 1000);
        
        // Gestione dell'indicatore di progresso dello scroll
        window.addEventListener('scroll', function() {
            const winScroll = document.body.scrollTop || document.documentElement.scrollTop;
            const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
            const scrolled = (winScroll / height) * 100;
            document.getElementById("scrollProgressBar").style.width = scrolled + "%";
        });
        
        // Gestione dei pulsanti di eliminazione con animazione veloce
        document.addEventListener('click', function(e) {
            // Controllo se l'elemento cliccato è un pulsante delete-station o un suo figlio
            const deleteBtn = e.target.closest('.delete-station');
            if (deleteBtn) {
                e.preventDefault();
                const stationId = deleteBtn.getAttribute('data-id');
                const stationName = deleteBtn.getAttribute('data-name');
                
                // Dialog di conferma grafico con SweetAlert2
                Swal.fire({
                    title: 'Elimina centralina',
                    html: `<div>
                        <p>Sei sicuro di voler eliminare la centralina <strong>"${stationName}"</strong>?</p>
                        <p class="text-danger"><small>Questa azione non può essere annullata.</small></p>
                    </div>`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#dc3545',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Elimina',
                    cancelButtonText: 'Annulla',
                    backdrop: true,
                    allowOutsideClick: true,
                    showClass: {
                        popup: 'animate__animated animate__fadeIn animate__faster' // Animazione veloce come preferito dall'utente
                    },
                    hideClass: {
                        popup: 'animate__animated animate__fadeOut animate__faster'
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Animazione rapida prima dell'eliminazione
                        const card = deleteBtn.closest('.col-md-6');
                        card.style.transition = 'all 0.2s ease'; // Ancora più veloce
                        card.style.opacity = '0.5';
                        card.style.transform = 'scale(0.95)';
                        
                        // Invia richiesta di eliminazione al server
                        fetch(`/api/devices/${stationId}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => {
                            if (response.ok) {
                                // Accelera l'animazione di uscita
                                card.style.transition = 'all 0.2s ease';
                                card.style.opacity = '0';
                                card.style.transform = 'scale(0.8)';
                                
                                // Mostra alert di conferma con durata maggiore
                                Swal.fire({
                                    title: 'Eliminato!',
                                    text: `Centralina "${stationName}" eliminata con successo`,
                                    icon: 'success',
                                    timer: 3000, // Aumento a 3 secondi per maggiore visibilità
                                    showConfirmButton: true, // Aggiungo pulsante di conferma
                                    confirmButtonText: 'Ok',
                                    confirmButtonColor: '#4CAF50',
                                    timerProgressBar: true,
                                    toast: true,
                                    position: 'top-end',
                                    showClass: {
                                        popup: 'animate__animated animate__fadeInRight animate__faster'
                                    },
                                    hideClass: {
                                        popup: 'animate__animated animate__fadeOutRight animate__faster'
                                    }
                                });
                                
                                // Rimuovi la card dopo una breve animazione
                                setTimeout(() => {
                                    card.remove();
                                    
                                    // Se era l'ultima card, mostra il messaggio "nessuna centralina"
                                    const remainingCards = document.querySelectorAll('.station-card').length;
                                    if (remainingCards === 0) {
                                        location.reload(); // Ricarica per mostrare il messaggio "nessuna centralina"
                                    }
                                }, 200); // Animazione rapida come preferito dall'utente
                            } else {
                                // Alert grafico per errore
                                Swal.fire({
                                    title: 'Errore!',
                                    text: 'Impossibile eliminare la centralina',
                                    icon: 'error',
                                    timer: 3000,
                                    timerProgressBar: true,
                                    confirmButtonText: 'Ok',
                                    confirmButtonColor: '#dc3545'
                                });
                                card.style.opacity = '1';
                                card.style.transform = 'scale(1)';
                            }
                        })
                        .catch(error => {
                            console.error('Errore:', error);
                            // Alert grafico per errore di rete
                            Swal.fire({
                                title: 'Errore di connessione',
                                text: 'Si è verificato un errore durante l\'eliminazione',
                                icon: 'error',
                                timer: 3000,
                                timerProgressBar: true,
                                confirmButtonText: 'Ok',
                                confirmButtonColor: '#dc3545'
                            });
                            card.style.opacity = '1';
                            card.style.transform = 'scale(1)';
                        });
                    }
                });
            }
        });
        
        // Animazioni al caricamento della pagina
        document.addEventListener('DOMContentLoaded', function() {
            // Aggiungi classe di animazione alle card 
            const cards = document.querySelectorAll('.station-card, .add-station-card');
            cards.forEach((card, index) => {
                card.style.animation = `fadeIn 0.5s ease forwards ${index * 0.1}s`;
                card.style.opacity = 0;
            });
        });
    </script>
    
    <!-- Ho incluso il banner dei cookie per il consenso GDPR -->
    <%- include('./partials/cookie-banner.ejs') %>
</body>
</html>
